# Database initialization, supports MySQL
database=mysql
spring.sql.init.schema-locations=classpath*:db/${database}/schema.sql
spring.sql.init.data-locations=classpath*:db/${database}/data.sql

# Ensure SQL initialization is always performed (change to 'always' only for dev/test environments)
spring.sql.init.mode=always

# Datasource configuration for MySQL
spring.datasource.url=${MYSQL_URL:jdbc:mysql://mysql-service:3306/petclinic?useSSL=false&allowPublicKeyRetrieval=true}
spring.datasource.username=${MYSQL_USER:petclinic}
spring.datasource.password=${MYSQL_PASSWORD:petclinic}

# MySQL Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# JPA Configuration
# Ensure Hibernate handles the schema as per your requirement. Use 'validate', 'update', 'create', or 'create-drop'.
# 'none' will disable schema management, meaning you will handle schema creation manually.
spring.jpa.hibernate.ddl-auto=none

# Open JPA sessions during view rendering
spring.jpa.open-in-view=true

# Web configuration
spring.thymeleaf.mode=HTML

# Internationalization settings
spring.messages.basename=messages/messages

# Actuator for monitoring (Prometheus metrics exposure)
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.metrics.enabled=true
management.metrics.export.prometheus.enabled=true

# Logging settings
logging.level.org.springframework=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE

# Cache control for static resources
spring.web.resources.cache.cachecontrol.max-age=12h

# Server port binding
server.port=8081
